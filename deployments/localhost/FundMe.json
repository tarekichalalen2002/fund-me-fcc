{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funderAddress",
          "type": "address"
        }
      ],
      "name": "getAmountByFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "funderIndex",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x73fa9dabf1e0053e4b1916430bf38c7f65258767dcb54ac1a1df12002d01f40e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "982770",
    "logsBloom": "0x
    "blockHash": "0xd0dd5d53c3d5258f6991bd457aea49b2dd76bc4c9077f916a9b44a9c701353c1",
    "transactionHash": "0x73fa9dabf1e0053e4b1916430bf38c7f65258767dcb54ac1a1df12002d01f40e",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "982770",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "6fd0df8c27aa829db1bc85816c133950",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funderAddress\",\"type\":\"address\"}],\"name\":\"getAmountByFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"funderIndex\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: Mit\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50;\\n\\n    //  771961\\n    //\\t794795\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_funderToAmmount;\\n\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;  \\n\\n    constructor(address priceFeedAddress){\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n\\n    function fund() public payable{\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"Didn't send enough value\\\");\\n        s_funderToAmmount[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner{\\n        // for loop \\n        for(uint256 i=0 ; i < s_funders.length ; i++) {\\n            address funder = s_funders[i];\\n            s_funderToAmmount[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for(uint256 i=0 ; i < funders.length ; i++) {\\n            address funder = funders[i];\\n            s_funderToAmmount[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder( uint256 funderIndex ) public view returns(address){\\n        return s_funders[funderIndex];\\n    }\\n\\n    function getAmountByFunder( address funderAddress) public view returns(uint256){\\n        return s_funderToAmmount[funderAddress];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n\\n    modifier onlyOwner{\\n        require(msg.sender == i_owner , \\\"Sender is not owner\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0x3845a31fde6ac8a260369e865627a13bf9a05cc6b4bb6e1ad636f78224923e6f\",\"license\":\"Mit\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: Mit\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        (,int price,,,)=priceFeed.latestRoundData();\\r\\n        // the price of ETH in terms of USD\\r\\n        return uint256(price * 1e10) ;\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount , AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 conversionRate = ethAmount * ethPrice;\\r\\n        return conversionRate;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xd789323182985de2f77979965c54023a641b9f81ffd27d936a8c490c3d9f720b\",\"license\":\"Mit\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011e0380380620011e083398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b608051611067620001796000396000818161019b015281816103eb015261056e01526110676000f3fe60806040526004361061007b5760003560e01c8063b60d42881161004e578063b60d42881461010b578063be2693f014610115578063d7b4750c1461011f578063e03083931461015c5761007b565b80633ccfd60b146100805780636b69a5921461008a578063893d20e8146100b55780639e87a5cd146100e0575b600080fd5b610088610199565b005b34801561009657600080fd5b5061009f6103e2565b6040516100ac9190610a23565b60405180910390f35b3480156100c157600080fd5b506100ca6103e7565b6040516100d79190610a7f565b60405180910390f35b3480156100ec57600080fd5b506100f561040f565b6040516101029190610af9565b60405180910390f35b610113610439565b005b61011d61056c565b005b34801561012b57600080fd5b5061014660048036038101906101419190610b45565b610819565b6040516101539190610a7f565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190610b9e565b610860565b6040516101909190610a23565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610c28565b60405180910390fd5b60005b6000805490508110156102d257600080828154811061024c5761024b610c48565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102ca90610ca6565b91505061022a565b50600067ffffffffffffffff8111156102ee576102ed610cee565b5b60405190808252806020026020018201604052801561031c5781602001602082028036833780820191505090505b5060009080519060200190610332929190610963565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035990610d4e565b60006040518083038185875af1925050503d8060008114610396576040519150601f19603f3d011682016040523d82523d6000602084013e61039b565b606091505b50509050806103df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d690610daf565b60405180910390fd5b50565b603281565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6032610470600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a990919063ffffffff16565b10156104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a890610e1b565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105009190610e3b565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f190610c28565b60405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561067d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610633575b5050505050905060005b81518110156107085760008282815181106106a5576106a4610c48565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061070090610ca6565b915050610687565b50600067ffffffffffffffff81111561072457610723610cee565b5b6040519080825280602002602001820160405280156107525781602001602082028036833780820191505090505b5060009080519060200190610768929190610963565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161078f90610d4e565b60006040518083038185875af1925050503d80600081146107cc576040519150601f19603f3d011682016040523d82523d6000602084013e6107d1565b606091505b5050905080610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080c90610daf565b60405180910390fd5b5050565b600080828154811061082e5761082d610c48565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806108b5836108d2565b9050600081856108c59190610e6f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610920573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109449190610f3e565b5050509150506402540be4008161095b9190610fb9565b915050919050565b8280548282559060005260206000209081019282156109dc579160200282015b828111156109db5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610983565b5b5090506109e991906109ed565b5090565b5b80821115610a065760008160009055506001016109ee565b5090565b6000819050919050565b610a1d81610a0a565b82525050565b6000602082019050610a386000830184610a14565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6982610a3e565b9050919050565b610a7981610a5e565b82525050565b6000602082019050610a946000830184610a70565b92915050565b6000819050919050565b6000610abf610aba610ab584610a3e565b610a9a565b610a3e565b9050919050565b6000610ad182610aa4565b9050919050565b6000610ae382610ac6565b9050919050565b610af381610ad8565b82525050565b6000602082019050610b0e6000830184610aea565b92915050565b600080fd5b610b2281610a0a565b8114610b2d57600080fd5b50565b600081359050610b3f81610b19565b92915050565b600060208284031215610b5b57610b5a610b14565b5b6000610b6984828501610b30565b91505092915050565b610b7b81610a5e565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b600060208284031215610bb457610bb3610b14565b5b6000610bc284828501610b89565b91505092915050565b600082825260208201905092915050565b7f53656e646572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610c12601383610bcb565b9150610c1d82610bdc565b602082019050919050565b60006020820190508181036000830152610c4181610c05565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cb182610a0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ce357610ce2610c77565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d38600083610d1d565b9150610d4382610d28565b600082019050919050565b6000610d5982610d2b565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d99600b83610bcb565b9150610da482610d63565b602082019050919050565b60006020820190508181036000830152610dc881610d8c565b9050919050565b7f4469646e27742073656e6420656e6f7567682076616c75650000000000000000600082015250565b6000610e05601883610bcb565b9150610e1082610dcf565b602082019050919050565b60006020820190508181036000830152610e3481610df8565b9050919050565b6000610e4682610a0a565b9150610e5183610a0a565b9250828201905080821115610e6957610e68610c77565b5b92915050565b6000610e7a82610a0a565b9150610e8583610a0a565b9250828202610e9381610a0a565b91508282048414831517610eaa57610ea9610c77565b5b5092915050565b600069ffffffffffffffffffff82169050919050565b610ed081610eb1565b8114610edb57600080fd5b50565b600081519050610eed81610ec7565b92915050565b6000819050919050565b610f0681610ef3565b8114610f1157600080fd5b50565b600081519050610f2381610efd565b92915050565b600081519050610f3881610b19565b92915050565b600080600080600060a08688031215610f5a57610f59610b14565b5b6000610f6888828901610ede565b9550506020610f7988828901610f14565b9450506040610f8a88828901610f29565b9350506060610f9b88828901610f29565b9250506080610fac88828901610ede565b9150509295509295909350565b6000610fc482610ef3565b9150610fcf83610ef3565b9250828202610fdd81610ef3565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561101557611014610c77565b5b828205841483151761102a57611029610c77565b5b509291505056fea264697066735822122005d256ebca058429548a41dbac2019dd4db2403944e4240b3a215e79de6dd6b064736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063b60d42881161004e578063b60d42881461010b578063be2693f014610115578063d7b4750c1461011f578063e03083931461015c5761007b565b80633ccfd60b146100805780636b69a5921461008a578063893d20e8146100b55780639e87a5cd146100e0575b600080fd5b610088610199565b005b34801561009657600080fd5b5061009f6103e2565b6040516100ac9190610a23565b60405180910390f35b3480156100c157600080fd5b506100ca6103e7565b6040516100d79190610a7f565b60405180910390f35b3480156100ec57600080fd5b506100f561040f565b6040516101029190610af9565b60405180910390f35b610113610439565b005b61011d61056c565b005b34801561012b57600080fd5b5061014660048036038101906101419190610b45565b610819565b6040516101539190610a7f565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190610b9e565b610860565b6040516101909190610a23565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610c28565b60405180910390fd5b60005b6000805490508110156102d257600080828154811061024c5761024b610c48565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102ca90610ca6565b91505061022a565b50600067ffffffffffffffff8111156102ee576102ed610cee565b5b60405190808252806020026020018201604052801561031c5781602001602082028036833780820191505090505b5060009080519060200190610332929190610963565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035990610d4e565b60006040518083038185875af1925050503d8060008114610396576040519150601f19603f3d011682016040523d82523d6000602084013e61039b565b606091505b50509050806103df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d690610daf565b60405180910390fd5b50565b603281565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6032610470600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a990919063ffffffff16565b10156104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a890610e1b565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105009190610e3b565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f190610c28565b60405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561067d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610633575b5050505050905060005b81518110156107085760008282815181106106a5576106a4610c48565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061070090610ca6565b915050610687565b50600067ffffffffffffffff81111561072457610723610cee565b5b6040519080825280602002602001820160405280156107525781602001602082028036833780820191505090505b5060009080519060200190610768929190610963565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161078f90610d4e565b60006040518083038185875af1925050503d80600081146107cc576040519150601f19603f3d011682016040523d82523d6000602084013e6107d1565b606091505b5050905080610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080c90610daf565b60405180910390fd5b5050565b600080828154811061082e5761082d610c48565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806108b5836108d2565b9050600081856108c59190610e6f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610920573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109449190610f3e565b5050509150506402540be4008161095b9190610fb9565b915050919050565b8280548282559060005260206000209081019282156109dc579160200282015b828111156109db5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610983565b5b5090506109e991906109ed565b5090565b5b80821115610a065760008160009055506001016109ee565b5090565b6000819050919050565b610a1d81610a0a565b82525050565b6000602082019050610a386000830184610a14565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6982610a3e565b9050919050565b610a7981610a5e565b82525050565b6000602082019050610a946000830184610a70565b92915050565b6000819050919050565b6000610abf610aba610ab584610a3e565b610a9a565b610a3e565b9050919050565b6000610ad182610aa4565b9050919050565b6000610ae382610ac6565b9050919050565b610af381610ad8565b82525050565b6000602082019050610b0e6000830184610aea565b92915050565b600080fd5b610b2281610a0a565b8114610b2d57600080fd5b50565b600081359050610b3f81610b19565b92915050565b600060208284031215610b5b57610b5a610b14565b5b6000610b6984828501610b30565b91505092915050565b610b7b81610a5e565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b600060208284031215610bb457610bb3610b14565b5b6000610bc284828501610b89565b91505092915050565b600082825260208201905092915050565b7f53656e646572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610c12601383610bcb565b9150610c1d82610bdc565b602082019050919050565b60006020820190508181036000830152610c4181610c05565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cb182610a0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ce357610ce2610c77565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d38600083610d1d565b9150610d4382610d28565b600082019050919050565b6000610d5982610d2b565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d99600b83610bcb565b9150610da482610d63565b602082019050919050565b60006020820190508181036000830152610dc881610d8c565b9050919050565b7f4469646e27742073656e6420656e6f7567682076616c75650000000000000000600082015250565b6000610e05601883610bcb565b9150610e1082610dcf565b602082019050919050565b60006020820190508181036000830152610e3481610df8565b9050919050565b6000610e4682610a0a565b9150610e5183610a0a565b9250828201905080821115610e6957610e68610c77565b5b92915050565b6000610e7a82610a0a565b9150610e8583610a0a565b9250828202610e9381610a0a565b91508282048414831517610eaa57610ea9610c77565b5b5092915050565b600069ffffffffffffffffffff82169050919050565b610ed081610eb1565b8114610edb57600080fd5b50565b600081519050610eed81610ec7565b92915050565b6000819050919050565b610f0681610ef3565b8114610f1157600080fd5b50565b600081519050610f2381610efd565b92915050565b600081519050610f3881610b19565b92915050565b600080600080600060a08688031215610f5a57610f59610b14565b5b6000610f6888828901610ede565b9550506020610f7988828901610f14565b9450506040610f8a88828901610f29565b9350506060610f9b88828901610f29565b9250506080610fac88828901610ede565b9150509295509295909350565b6000610fc482610ef3565b9150610fcf83610ef3565b9250828202610fdd81610ef3565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561101557611014610c77565b5b828205841483151761102a57611029610c77565b5b509291505056fea264697066735822122005d256ebca058429548a41dbac2019dd4db2403944e4240b3a215e79de6dd6b064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funderToAmmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}